version: '3'

services:
  user_ride_management:
    image: user-ride-management
    container_name: user_ride_management
    networks:
      - my-network
    depends_on:
      - postgres
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq
      POSTGRES_HOST: postgres
      POSTGRES_DB: padmicro1
      POSTGRES_USER: client
      POSTGRES_PASSWORD: client
    deploy:
      replicas: 3  # Set the number of replicas

  realtime_chat:
    image: realtime-chat
    container_name: realtime_chat
    networks:
      - my-network
    depends_on:
      - mongodb
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
    deploy:
      replicas: 3  # Set the number of replicas

  api_gateway:
    image: api-gateway
    container_name: api_gateway
    networks:
      - my-network
    depends_on:
      - user_ride_management
      - realtime_chat
    environment:
      USER_RIDE_MANAGEMENT_HOST: user_ride_management
      REALTIME_CHAT_HOST: realtime_chat
    deploy:
      replicas: 3  # Set the number of replicas

  nginx:
    image: nginx
    container_name: nginx
    networks:
      - my-network
    ports:
      - "80:80"
    depends_on:
      - api_gateway
    deploy:
      replicas: 1  # Only one instance for NGINX


  postgres:
    image: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    networks:
      - my-network
    environment:
      POSTGRES_DB: padmicro1
      POSTGRES_USER: client
      POSTGRES_PASSWORD: client

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - my-network

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - my-network
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

networks:
  my-network:
    driver: bridge
